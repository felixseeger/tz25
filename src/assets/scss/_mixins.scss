// Media query for max-width (mobile-first approach)
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-xs) { @content; }
  } @else if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (max-width: $breakpoint-xxl) { @content; }
  } @else if $breakpoint == xxxl {
    @media (max-width: $breakpoint-xxxl) { @content; }
  } @else if $breakpoint == 4k {
    @media (max-width: $breakpoint-4k) { @content; }
  }
}

// Media query for min-width (desktop-specific styling)
@mixin desktop-up($breakpoint) {
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xxl) { @content; }
  } @else if $breakpoint == xxxl {
    @media (min-width: $breakpoint-xxxl) { @content; }
  } @else if $breakpoint == 4k {
    @media (min-width: $breakpoint-4k) { @content; }
  }
}

// Media query for specific range (between two breakpoints)
@mixin respond-between($min, $max) {
  @media (min-width: $min) and (max-width: $max) { @content; }
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin container {
  width: 100%;
  max-width: $container-width;
  margin: 0 auto;
  padding: 0 $spacing-unit;
}
